{"version":3,"sources":["components/product/NewProduct.jsx","components/product/ProductItem.jsx","components/product/ProductsList.jsx","components/product/Products.jsx","components/product/UpdateProduct.jsx","components/sale/ProductItem.jsx","components/sale/ProductsList.jsx","components/sale/NewSale.jsx","components/sale/SaleItem.jsx","components/sale/SalesList.jsx","components/sale/Sales.jsx","components/sale/UpdateSale.jsx","components/client/NewClient.jsx","components/client/ClientItem.jsx","components/client/ClientsList.jsx","components/client/Clients.jsx","components/client/UpdateClient.jsx","shared/context/auth-context.js","shared/components/Navigation/MainNavigation.jsx","shared/components/Landing/Landing.jsx","components/auth/Login.js","components/auth/Register.js","App.jsx","index.js"],"names":["NewProduct","props","useState","name","price","formData","setFormData","setIsLoading","error","setError","onChange","e","target","value","onSubmit","a","preventDefault","oldError","newProductData","fetch","process","method","headers","localStorage","getItem","body","JSON","stringify","response","json","responseData","ok","history","push","errors","forEach","element","msg","concat","console","message","ErrElements","map","err","index","key","style","color","className","type","placeholder","ProductItem","handleDelete","id","Error","onDelete","toFixed","onClick","ProductsList","items","length","position","product","_id","Products","products","setProducts","useEffect","sendRequest","deletedProductId","prevProducts","filter","log","UpdateProduct","productId","useParams","Number","toLocaleString","fetchProduct","updateProductData","quantity","NewSale","selectedProducts","setSelectedProducts","clients","setClients","client","setClient","formProduct","setFormProduct","sendRequestProducts","old","sendRequestClients","onChangeProduct","onSubmitSale","newSaleData","onChangeClient","selectedName","find","prod","onSubmitProduct","SaleItem","handleEmail","alert","date","SalesList","sale","done","Sales","sales","setSales","deletedSaleId","prevSales","UpdateSale","saleId","saleResponse","saleResponseData","populatedProducts","p","NewClient","email","tel","address","newClientData","ClientItem","ClientsList","Clients","deletedClientId","prevClients","UpdateClient","clientId","fetchClient","updateClientData","AuthContext","createContext","isLoggedIn","login","logout","MainNavigation","auth","useContext","to","Landing","Login","password","loginAction","setItem","token","loginData","removeItem","Register","password2","registerAction","newUser","minLength","App","setIsLoggedIn","useCallback","Provider","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18872b34.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport const NewProduct = props => {\n    const [formData, setFormData] = useState({\n        name: '',\n        price: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n\n    const { name, price } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const newProductData = {\n            name,\n            price\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/product',\n                {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(newProductData)\n                }\n            )\n            const responseData = await response.json();\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/products');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Add New Product</h1>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Name\" name=\"name\"\n                    value={name} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product price\" name=\"price\"\n                    value={price} \n                    onChange={e => onChange(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add\" />\n            </form>\n        </section>\n    )\n}\n\nexport default NewProduct;","import React from 'react';\n\nconst ProductItem = props => {\n    const handleEdit = () => {\n        props.history.push('/product/' + props.id)\n    }\n\n    const handleDelete = async () => {\n        try {\n            const response = await fetch(\n                process.env.REACT_APP_BACKEND_URL + '/api/product/' + props.id,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'x-auth-token': localStorage.getItem('token')\n                    }\n                }\n            );\n\n            const responseData = await response.json();\n            \n            if(!response.ok) {\n                throw new Error(responseData.msg)\n            }\n            \n            props.onDelete(props.id);\n        } catch (err) {\n            //setIsLoading(false);\n            //setError(err.message);\n        }\n    }\n\n    return(\n        <li>\n            <div className=\"post bg-white p my-1\">\n                <p>\n                    Name: {props.name}\n                    <br />\n                    Price: R${props.price.toFixed(2)}\n                </p>\n                <p>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleEdit}>\n                        Edit\n                    </button>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleDelete}>\n                        Delete\n                    </button>\n                </p>\n                \n            </div>\n        </li>\n    );\n};\n\nexport default ProductItem;\n","import React from 'react'\nimport ProductItem from './ProductItem'\n\nconst ProductsList = props => {\n    if(props.items.length === 0){\n        return <div className='center'>\n            <h2>No products found.</h2>\n        </div>\n    }\n    return (<ul \n        style={{position: 'relative'}}\n        className=\"products-list\">\n        {props.items.map(product => (\n            <ProductItem\n              key={product._id}\n              id={product._id}\n              name={product.name}\n              price={product.price}\n              onDelete={props.onDelete}\n              history={props.history} />\n        ))}\n    </ul>);\n}\n\nexport default ProductsList;","import React, {useState, useEffect} from 'react'\n\nimport ProductsList from './ProductsList'\n\nconst Products = props => {\n    const [products, setProducts] = useState();\n    const [error, setError] = useState();\n    const [isLoading, setIsLoading] = useState(false)\n\n    const newHandler = () => {\n        props.history.push('/product/new');\n    }\n\n    const onDeleteHandler = deletedProductId => {\n        setProducts(prevProducts => \n            prevProducts.filter(product => product._id !== deletedProductId)\n        );\n        console.log(products)\n    }\n\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/product',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setProducts(() => responseData);\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            \n        };\n        sendRequest();\n    }, [])\n    return <section className=\"container\">\n        <h1 className=\"large text-primary\">\n            Products\n        </h1>\n        <button\n            onClick={newHandler} \n            className='btn btn-green'>New Product</button>\n        {products && <ProductsList items={products} onDelete={onDeleteHandler}\n            history={props.history} />}\n    </section>\n}\n\nexport default Products;\n","import React, {useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom';\n\nexport const UpdateProduct = props => {\n    const productId = useParams().productId;\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        price: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n    const { name, price } = formData;\n\n\n    useEffect(() => {\n        const fetchProduct = async () => {\n          try {\n            const response = await fetch(\n              `${process.env.REACT_APP_BACKEND_URL}/api/product/${productId}`,\n              {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                }\n              }\n            );\n            const responseData = await response.json()\n            //setLoadedPlace(responseData.place);\n            setFormData(\n              {\n                name: responseData.name,\n                price: Number(responseData.price ).toLocaleString('pt-BR')\n              }\n            );\n    \n          } catch (err) {\n              console.error(err)\n          }\n        };\n        fetchProduct();\n      }, []);\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const updateProductData = {\n            name,\n            price\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + \n                '/api/product/' +  productId,\n                {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(updateProductData)\n                }\n            )\n            const responseData = await response.json();\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/products');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Update Product</h1>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Name\" name=\"name\"\n                    value={name} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Price\" name=\"price\"\n                    value={price} \n                    onChange={e => onChange(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Update\" />\n                <button type=\"submit\" className=\"btn btn-primary\"\n                onClick={() => props.history.push('/products')}>Cancel</button>\n            </form>\n            \n        </section>\n    )\n}\n\nexport default UpdateProduct;","import React from 'react';\n\nconst ProductItem = props => {\n\n    return(\n        <li>\n            <div className=\"post bg-white p my-1\">\n                <p>\n                    Product: {props.name}\n                </p>\n                <p>\n                Quantity: {props.quantity}\n                </p>\n                <p>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={() => props.onDelete(props.id)}>\n                        Delete\n                    </button>\n                </p>\n                \n            </div>\n        </li>\n    );\n};\n\nexport default ProductItem;\n","import React from 'react'\nimport ProductItem from './ProductItem'\n\nconst ProductsList = props => {\n    \n    return (<ul \n        style={{position: 'relative'}}\n        className=\"products-list\">\n        {props.items.map(product => (\n            <ProductItem\n              key={product.product}\n              id={product.product}\n              name={product.name}\n              quantity={product.quantity}\n              onDelete={props.onDelete}\n              history={props.history} />\n        ))}\n    </ul>);\n}\n\nexport default ProductsList;","import React, {useState, useEffect} from 'react'\nimport ProductsList from './ProductsList'\n\n\nexport const NewSale = props => {\n    const [products, setProducts] = useState(); // products from database\n    const [selectedProducts, setSelectedProducts] = useState([]); // selected products\n    const [clients, setClients] = useState(); // clients from database\n    const [client, setClient] = useState([]); // selected client\n    const [error, setError] = useState([]);\n    const [isLoading, setIsLoading] = useState(false)\n    const [formProduct, setFormProduct] = useState({\n        quantity: '',\n        product: ''\n    }); // form that holds quantity and id of new selected product\n\n    const { quantity, product } = formProduct\n\n    // Get products for user\n    useEffect(() => {\n        // Load products\n        const sendRequestProducts = async () => {\n            setIsLoading(true);\n            try {\n                // Get products array\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/product',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                // Error on fetch, set errors\n                if(!response.ok) {\n                    var errors = []\n                    responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                    });\n                    setError(oldError => oldError.concat(errors))\n                    setIsLoading(false);\n                // Successfully fetched products\n                } else {\n                    // Set products list\n                    setProducts(() => responseData);\n                    // If list not empty: choose first element\n                    if ( responseData.length > 0){\n                        setFormProduct(old => {return {...old, product: responseData[0]._id}})\n                    }\n                    setIsLoading(false);\n                }\n            } catch (err) {\n                setIsLoading(false);\n                setError(old => [...old, err.message]);\n            }\n            \n        };\n        // Load Clients\n        const sendRequestClients = async () => {\n            setIsLoading(true);\n            try {\n                // Get Clients\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/client',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    var errors = []\n                    responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                    });\n                    setError(oldError => oldError.concat(errors))\n                    setIsLoading(false);\n                }\n                \n                setClients(() => responseData);\n                if ( responseData.length > 0){\n                    setClient(responseData[0]._id)\n                }\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError([err.message]);\n            }\n            \n        };\n\n        sendRequestProducts();\n        sendRequestClients();\n    }, [])\n\n\n    const onChangeClient = e => setClient(e.target.value)\n\n    const onChangeProduct = e => {\n        setFormProduct({...formProduct, [e.target.name]: e.target.value})\n    }\n\n    const onSubmitSale = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const newSaleData = {\n            client, products: selectedProducts\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/sale',\n                {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(newSaleData)\n                }\n            )\n            const responseData = await response.json();\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/sales');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n\n    const onSubmitProduct = e => {\n        e.preventDefault()\n        const selectedName = products.find(\n            prod => prod._id === product\n        ).name\n        const newProductData = {...formProduct, name: selectedName}\n        setSelectedProducts(old => [...old, newProductData])\n        setFormProduct(old => {return {...old, quantity: ''}})\n    }\n\n    const onDeleteHandler = id => {\n        setSelectedProducts(old => old.filter(prod => id !== prod.product))\n    }\n\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Add New Sale</h1>\n            <ErrElements errors = {error} />\n\n            <form className=\"form\" onSubmit={e => onSubmitSale(e)}>\n                <input type=\"submit\" className=\"btn btn-green\" value=\"Add Sale\" />\n                <p className=\"lead text-dark\">Choose a Client:</p>\n                    {clients && <select\n                        name=\"client\"\n                        value={client} \n                        onChange={e => onChangeClient(e)}>\n                    {clients.map( client => {\n                        return (<option \n                            key={client._id} \n                            value={client._id}>\n                            {client.name}\n                        </option>)\n                    })}\n                </select>}\n            </form>\n\n            <form className=\"form\" onSubmit={e => {onSubmitProduct(e)}}>\n                <p className=\"lead text-dark\">Choose a Product:</p>\n                    {products && <select\n                        name=\"product\"\n                        value={product} \n                        onChange={e => onChangeProduct(e)}>\n                        {products.map( product => {\n                            return (<option \n                                key={product._id} \n                                value={product._id}>\n                                {product.name}\n                            </option>)\n                        })}\n                    </select>}\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Quantity\" name=\"quantity\"\n                    value={quantity}\n                    onChange={e => onChangeProduct(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add Product\" />\n            </form>\n            \n            {products && <ProductsList items={selectedProducts} onDelete={onDeleteHandler}\n            history={props.history} />}\n            \n        </section>\n    )\n}\n\nexport default NewSale;","import React from 'react';\n\nconst SaleItem = props => {\n    const handleEdit = () => {\n        props.history.push('/sale/' + props.id)\n    }\n\n    const handleDelete = async () => {\n        try {\n            const response = await fetch(\n                process.env.REACT_APP_BACKEND_URL + '/api/sale/' + props.id,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'x-auth-token': localStorage.getItem('token')\n                    }\n                }\n            );\n\n            const responseData = await response.json();\n            \n            if(!response.ok) {\n                throw new Error(responseData.msg)\n            }\n            \n            props.onDelete(props.id);\n            \n        } catch (err) {\n            //setIsLoading(false);\n            //setError(err.message);\n        }\n    }\n\n    const handleEmail = async () => {\n        try {\n            const response = await fetch(\n                process.env.REACT_APP_BACKEND_URL + '/api/sale/email/' + props.id,\n                {\n                    method: 'GET',\n                    headers: {\n                        'x-auth-token': localStorage.getItem('token')\n                    }\n                }\n            );\n\n            const responseData = await response.json();\n            \n            if(!response.ok) {\n                alert('Email not sent')\n                throw new Error(responseData.msg)\n            } else {\n                alert('Email sent!')\n            }\n\n        } catch (error) {\n            \n        }\n    }\n\n    return(\n        <li>\n            <div className=\"post bg-white p my-1\">\n                <p>\n                    Date: {props.date} <br/>\n                    Client: {props.client.name} <br/>\n                    Items: {props.quantity} <br/>\n                    Price: R${props.price.toFixed(2)}\n                    \n                </p>\n                <p>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleEdit}>\n                        Edit\n                    </button>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleDelete}>\n                        Delete\n                    </button>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleEmail}>\n                        Send Email\n                    </button>\n                </p>\n                \n            </div>\n        </li>\n    );\n};\n\nexport default SaleItem;\n","import React from 'react'\nimport SaleItem from './SaleItem'\n\nconst SalesList = props => {\n    if(props.items.length === 0){\n        return <div className='center'>\n            <h2>No sales found.</h2>\n        </div>\n    }\n    return (<ul \n        style={{position: 'relative'}}\n        className=\"sales-list\">\n        {props.items.map(sale => (\n            <SaleItem\n              key={sale._id}\n              id={sale._id}\n              client={sale.client}\n              date={sale.date}\n              price={sale.price}\n              done={sale.done}\n              quantity={sale.products.length}\n              onDelete={props.onDelete}\n              history={props.history} />\n        ))}\n    </ul>);\n}\n\nexport default SalesList;","import React, {useState, useEffect} from 'react'\n\nimport SalesList from './SalesList'\n\nconst Sales = props => {\n    const [sales, setSales] = useState();\n    const [error, setError] = useState();\n    const [isLoading, setIsLoading] = useState(false)\n\n    const newHandler = () => {\n        props.history.push('/sale/new');\n    }\n\n    const onDeleteHandler = deletedSaleId => {\n        setSales(prevSales => \n            prevSales.filter(sale => sale._id !== deletedSaleId)\n        );\n        console.log(sales)\n    }\n\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/sale',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setSales(() => responseData);\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            \n        };\n        sendRequest();\n    }, [])\n    return <section className=\"container\">\n        <h1 className=\"large text-primary\">\n            Sales\n        </h1>\n        <button\n            onClick={newHandler} \n            className='btn btn-green'>New Sale</button>\n        {sales && <SalesList items={sales} onDelete={onDeleteHandler}\n            history={props.history} />}\n    </section>\n}\n\nexport default Sales;\n","import React, {useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom';\nimport ProductsList from './ProductsList'\n\n\nexport const UpdateSale = props => {\n    const saleId = useParams().saleId;\n\n    const [products, setProducts] = useState(); // products from database\n    const [selectedProducts, setSelectedProducts] = useState([]);\n    const [clients, setClients] = useState(); // clients from database\n    const [client, setClient] = useState();\n    const [error, setError] = useState([]);\n    const [isLoading, setIsLoading] = useState(false)\n    const [formProduct, setFormProduct] = useState({\n        quantity: '',\n        product: ''\n    });\n\n    const { quantity, product } = formProduct\n\n    // Get products for user\n    useEffect(() => {\n        const sendRequestProducts = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/product',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n                \n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setProducts(() => responseData);\n                if ( responseData.length > 0){\n                    setFormProduct(old => {return {...old, product: responseData[0]._id}})\n                }\n                setIsLoading(false);\n\n                // Set Selected products\n                // Get sale info\n                const saleResponse = await fetch(\n                    `${process.env.REACT_APP_BACKEND_URL}/api/sale/${saleId}`,\n                    {\n                      headers: {\n                          'Content-Type': 'application/json',\n                          'x-auth-token': localStorage.getItem('token')\n                      }\n                    }\n                  );\n                  const saleResponseData = await saleResponse.json()\n                  \n                  // Get sale selected products\n                  let populatedProducts = []\n                  saleResponseData.products.forEach( product =>{\n                    // Add product name to object\n                    const name = responseData.filter(\n                        p => p._id === product.product\n                    )[0].name\n                    // Add complete value to populated products variable\n                    populatedProducts.push({...product, name})\n                  });\n                  setSelectedProducts(old => {return [...old, ...populatedProducts]});\n                  \n                  console.log(responseData)\n\n                  setClient(saleResponseData.client)\n\n            } catch (err) {\n                setIsLoading(false);\n                setError(old => old.concat(err.message));\n            }\n            \n        };\n\n        const sendRequestClients = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/client',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setClients(() => responseData);\n                if ( responseData.length > 0){\n                    setClient(responseData[0]._id)\n                }\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(oldError => oldError.concat(err.message));\n            }\n            \n        };\n\n        sendRequestProducts();\n        sendRequestClients();\n    }, [])\n\n\n    const onChangeClient = e => setClient(e.target.value)\n\n    const onChangeProduct = e => {\n        setFormProduct({...formProduct, [e.target.name]: e.target.value})\n    }\n\n    const onSubmitSale = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const newSaleData = {\n            client, products: selectedProducts\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL +\n                '/api/sale/' + saleId,\n                {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(newSaleData)\n                }\n            )\n            const responseData = await response.json();\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/sales');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n\n    const onSubmitProduct = e => {\n        e.preventDefault()\n        const selectedName = products.filter(\n            prod => prod._id === product\n        )[0].name\n        const newProductData = {...formProduct, name: selectedName}\n        setSelectedProducts(old => [...old, newProductData])\n        setFormProduct(old => {return {...old, quantity: 0}})\n    }\n\n    const onDeleteHandler = id => {\n        setSelectedProducts(old => old.filter(prod => id !== prod.product))\n    }\n\n    const ErrElements = props => {\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Update Sale</h1>\n            <ErrElements errors = {error} />\n\n            <form className=\"form\" onSubmit={e => onSubmitSale(e)}>\n                <input type=\"submit\" className=\"btn btn-green\" value=\"Update Sale\" />\n                <button type=\"submit\" className=\"btn btn-primary\"\n                onClick={() => props.history.push('/sales')}>Cancel</button>\n                <p className=\"lead text-dark\">Choose a Client:</p>\n                    {clients && client && <select\n                        name=\"client\"\n                        value={client} \n                        onChange={e => onChangeClient(e)}>\n                    {clients.map( client => {\n                        return (<option \n                            key={client._id} \n                            value={client._id}>\n                            {client.name}\n                        </option>)\n                    })}\n                </select>}\n            </form>\n\n            <form className=\"form\" onSubmit={e => {onSubmitProduct(e)}}>\n                <p className=\"lead text-dark\">Choose a Product:</p>\n                    {products && <select\n                        name=\"product\"\n                        value={product} \n                        onChange={e => onChangeProduct(e)}>\n                    {products.map( product => {\n                        return (<option \n                            key={product._id} \n                            value={product._id}>\n                            {product.name}\n                        </option>)\n                    })}\n                </select>}\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Quantity\" name=\"quantity\"\n                    value={quantity}\n                    onChange={e => onChangeProduct(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add Product\" />\n            </form>\n            \n            {products && selectedProducts && <ProductsList items={selectedProducts} onDelete={onDeleteHandler}\n            history={props.history} />}\n            \n        </section>\n    )\n}\n\nexport default UpdateSale;","import React, {useState} from 'react'\n\nexport const NewClient = props => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        tel: '',\n        address: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n\n    const { name, email, tel, address } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const newClientData = {\n            ...formData\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/client',\n                {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(newClientData)\n                }\n            )\n            const responseData = await response.json();\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/clients');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Add New Client</h1>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client Name\" name=\"name\"\n                    value={name} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client email\" name=\"email\"\n                    value={email} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client tel\" name=\"tel\"\n                    value={tel} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client address\" name=\"address\"\n                    value={address} \n                    onChange={e => onChange(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add\" />\n            </form>\n        </section>\n    )\n}\n\nexport default NewClient;","import React from 'react';\n\nconst ClientItem = props => {\n    const handleEdit = () => {\n        props.history.push('/client/' + props.id)\n    }\n\n    const handleDelete = async () => {\n        try {\n            const response = await fetch(\n                process.env.REACT_APP_BACKEND_URL + '/api/client/' + props.id,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'x-auth-token': localStorage.getItem('token')\n                    }\n                }\n            );\n\n            const responseData = await response.json();\n            \n            if(!response.ok) {\n                throw new Error(responseData.msg)\n            }\n            \n            props.onDelete(props.id);\n        } catch (err) {\n            //setIsLoading(false);\n            //setError(err.message);\n        }\n    }\n\n    return(\n        <li>\n            <div className=\"post bg-white p my-1\">\n                <p>\n                    Name: {props.name}\n                    <br />\n                    Email: {props.email}\n                    <br />\n                    Tel: {props.tel}\n                    <br />\n                    Address: {props.address}\n                </p>\n                <p>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleEdit}>\n                        Edit\n                    </button>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleDelete}>\n                        Delete\n                    </button>\n                </p>\n                \n            </div>\n        </li>\n    );\n};\n\nexport default ClientItem;\n","import React from 'react'\nimport ClientItem from './ClientItem'\n\nconst ClientsList = props => {\n    if(props.items.length === 0){\n        return <div className='center'>\n            <h2>No clients registered.</h2>\n        </div>\n    }\n    return (<ul \n        style={{position: 'relative'}}\n        className=\"clients-list\">\n        {props.items.map(client => (\n            <ClientItem\n              key={client._id}\n              id={client._id}\n              name={client.name}\n              email={client.email}\n              tel={client.tel}\n              address={client.address}\n              onDelete={props.onDelete}\n              history={props.history} />\n        ))}\n    </ul>);\n}\n\nexport default ClientsList;","import React, {useState, useEffect} from 'react'\n\nimport ClientsList from './ClientsList'\n\nconst Clients = props => {\n    const [clients, setClients] = useState();\n    const [error, setError] = useState();\n    const [isLoading, setIsLoading] = useState(false)\n\n    const newHandler = () => {\n        props.history.push('/client/new');\n    }\n\n    const onDeleteHandler = deletedClientId => {\n        setClients(prevClients => \n            prevClients.filter(client => client._id !== deletedClientId)\n        );\n        console.log(clients)\n    }\n\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/client',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setClients(() => responseData);\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            \n        };\n        sendRequest();\n    }, [])\n    return <section className=\"container\">\n        <h1 className=\"large text-primary\">\n            Clients\n        </h1>\n        <button\n            onClick={newHandler} \n            className='btn btn-green'>New Client</button>\n        {clients && <ClientsList items={clients} onDelete={onDeleteHandler}\n            history={props.history} />}\n    </section>\n}\n\nexport default Clients;\n","import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport const UpdateClient = props => {\n    const clientId = useParams().clientId;\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        tel: '',\n        address: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n    const { name, email, tel, address } = formData;\n\n\n    useEffect(() => {\n        const fetchClient = async () => {\n          try {\n            const response = await fetch(\n              `${process.env.REACT_APP_BACKEND_URL}/api/client/${clientId}`,\n              {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                }\n              }\n            );\n            const responseData = await response.json()\n            //setLoadedPlace(responseData.place);\n            setFormData(\n              {\n                name: responseData.name,\n                email: responseData.email,\n                tel: responseData.tel,\n                address: responseData.address\n              }\n            );\n    \n          } catch (err) {\n              console.error(err)\n          }\n        };\n        fetchClient();\n      }, [clientId, setFormData]);\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const updateClientData = {\n            ...formData\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + \n                '/api/client/' +  clientId,\n                {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(updateClientData)\n                }\n            )\n            const responseData = await response.json();\n            console.log(responseData);\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/clients');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Update Client</h1>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client Name\" name=\"name\"\n                    value={name} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client email\" name=\"email\"\n                    value={email} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client tel\" name=\"tel\"\n                    value={tel} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client address\" name=\"address\"\n                    value={address} \n                    onChange={e => onChange(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Update\" />\n                <button type=\"submit\" className=\"btn btn-primary\"\n                onClick={() => props.history.push('/clients')}>Cancel</button>\n            </form>\n            \n        </section>\n    )\n}\n\nexport default UpdateClient;","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    login: () => {},\n    logout: () => {}\n})","import React, { useContext } from 'react';\nimport {Link} from 'react-router-dom'\nimport { AuthContext } from '../../context/auth-context';\n\nconst MainNavigation = props => {\n    const auth = useContext(AuthContext);\n\n    return (\n        <nav className=\"navbar bg-dark\">\n        <h1>\n            <Link to=\"/\">\n                <i className=\"fas fa-code\"></i> Direct2U\n            </Link>\n        </h1>\n        <ul>\n            {!auth.isLoggedIn && \n                <li><Link to=\"/register\">Register</Link></li>\n            }\n            {!auth.isLoggedIn && \n                <li><Link to=\"/login\">Login</Link></li>\n            }\n            {auth.isLoggedIn && \n                <li><Link to=\"/clients\">Clients</Link></li>\n            }\n            {auth.isLoggedIn && \n                <li><Link to=\"/products\">Products</Link></li>\n            }\n            {auth.isLoggedIn && \n                <li><Link to=\"/sales\">Sales</Link></li>\n            }\n            {auth.isLoggedIn &&\n                <li><button onClick={auth.logout}>LOGOUT</button></li>\n            }\n        </ul>\n        </nav>\n    );\n};\n\nexport default MainNavigation;","import React, {useContext} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport { AuthContext } from '../../context/auth-context';\n\nexport const Landing = () => {\n    const auth = useContext(AuthContext);\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                <h1 className=\"x-large\">\n                    Direct2U\n                </h1>\n                <p className=\"lead\">\n                    A Direct Sales Management Plattaform\n                </p>\n                <div className=\"buttons\">\n                    {!auth.isLoggedIn &&\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>}\n                    {!auth.isLoggedIn &&\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>}\n                </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Landing;","import React, {useState, useContext} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport { AuthContext } from '../../shared/context/auth-context';\n\nexport const Login = () => {\n    const auth = useContext(AuthContext);\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n\n    const loginAction = (auth, responseData) => {\n        localStorage.setItem('token', responseData.token);\n        auth.login();\n    }\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const loginData = {\n            email,\n            password\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/auth',\n                {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(loginData)\n                }\n            )\n            const responseData = await response.json();\n            console.log(responseData);\n            if(!response.ok){\n                localStorage.removeItem('token');\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                loginAction(auth, responseData)\n            }\n\n        } catch (err) {\n            localStorage.removeItem('token');\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\"\n                    value={email} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    \n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </section>\n    )\n}\n\nexport default Login;\n","import React, {useState, useContext} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport { AuthContext } from '../../shared/context/auth-context';\n\nexport const Register = () => {\n    const auth = useContext(AuthContext);\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n\n    const registerAction = ((auth, responseData) => {\n        localStorage.setItem('token', responseData.token);\n        auth.login();\n    })\n\n    const { name, email, password, password2} = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        if(password !== password2) {\n            setError(oldError => [...oldError, 'Passwords do not match'])\n            console.log('Passwords do not match');\n        } else {\n            const newUser = {\n                name,\n                email,\n                password\n            }\n            try {\n                setIsLoading(true);\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/user',\n                    {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(newUser)\n                    }\n                )\n                const responseData = await response.json();\n                // console.log(responseData);\n                if(!response.ok) {\n                    localStorage.removeItem('token');\n                    var errors = []\n                    responseData.errors.forEach(element => {\n                        errors.push(element.msg) \n                    });\n                    setError(oldError => oldError.concat(errors))\n                    setIsLoading(false);\n                } else {\n                    setIsLoading(false);\n                    registerAction(auth, responseData)\n                }\n                \n            } catch (err) {\n                localStorage.removeItem('token');\n                console.error(err);\n                setIsLoading(false);\n                setError(oldError => [...oldError, err.message \n                    || 'Something went wrong, please try again'])\n            }\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" \n                    value={name} \n                    onChange={e => onChange(e)}\n                 />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\"\n                    value={email} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    \n                />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    minLength=\"6\"\n                    value={password2} \n                    onChange={e => onChange(e)}\n                    \n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </section>\n    )\n}\n\nexport default Register;","import React, { useState, useCallback } from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\n\nimport NewProduct from './components/product/NewProduct'\nimport Products from './components/product/Products'\nimport UpdateProduct from './components/product/UpdateProduct'\n\nimport NewSale from './components/sale/NewSale'\nimport Sales from './components/sale/Sales'\nimport UpdateSale from './components/sale/UpdateSale'\n\nimport NewClient from './components/client/NewClient'\nimport Clients from './components/client/Clients'\nimport UpdateClient from './components/client/UpdateClient'\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport Landing from './shared/components/Landing/Landing'\n\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\n\nimport { AuthContext } from './shared/context/auth-context'\n\nimport './App.css';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const login = useCallback(() => {\n        setIsLoggedIn(true);\n    }, [])\n\n    const logout = useCallback(() => {\n        setIsLoggedIn(false);\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{isLoggedIn, login, logout}}>\n            <Router>\n            <MainNavigation />\n            {isLoggedIn ? <Switch>\n                    <Route path='/product/new' exact component={NewProduct} />\n                    <Route path='/products' exact component={Products} />\n                    <Route path='/product/:productId' exact component={UpdateProduct} />\n                    <Route path='/sale/new' exact component={NewSale} />\n                    <Route path='/sales' exact component={Sales} />\n                    <Route path='/sale/:saleId' exact component={UpdateSale} />\n                    <Route path='/client/new' exact component={NewClient} />\n                    <Route path='/clients' exact component={Clients} />\n                    <Route path='/client/:clientId' exact component={UpdateClient} />\n                    <Route path='/' exact component={Landing} />\n                    <Redirect to='/' />\n                </Switch>\n                :\n                <Switch>\n                    <Route exact path='/register' component={Register} />\n                    <Route exact path='/login' component={Login} />\n                    <Route path='/' exact component={Landing} />\n                    <Redirect to='/' />\n                </Switch>}\n            </Router>\n        </AuthContext.Provider>\n    );\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}