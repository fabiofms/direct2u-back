{"version":3,"sources":["components/product/NewProduct.jsx","components/product/ProductItem.jsx","components/product/ProductsList.jsx","components/product/Products.jsx","components/product/UpdateProduct.jsx","components/sale/ProductItem.jsx","components/sale/ProductsList.jsx","components/sale/NewSale.jsx","components/sale/SaleItem.jsx","components/sale/SalesList.jsx","components/sale/Sales.jsx","components/sale/UpdateSale.jsx","shared/context/auth-context.js","shared/components/Navigation/MainNavigation.jsx","shared/components/Landing/Landing.jsx","components/auth/Login.js","components/auth/Register.js","App.jsx","index.js"],"names":["NewProduct","props","useState","name","price","formData","setFormData","setIsLoading","error","setError","onChange","e","target","value","onSubmit","a","preventDefault","oldError","newProductData","fetch","process","method","headers","localStorage","getItem","body","JSON","stringify","response","json","responseData","ok","history","push","errors","forEach","element","msg","concat","console","message","ErrElements","map","err","index","key","style","color","className","type","placeholder","ProductItem","handleDelete","id","Error","onDelete","toFixed","onClick","ProductsList","items","length","position","product","_id","Products","products","setProducts","useEffect","sendRequest","deletedProductId","prevProducts","filter","log","UpdateProduct","productId","useParams","fetchProduct","updateProductData","quantity","NewSale","selectedProducts","setSelectedProducts","formProduct","setFormProduct","client","email","formSale","setFormSale","old","onChangeSale","onChangeProduct","onSubmitSale","newSaleData","selectedName","prod","onSubmitProduct","SaleItem","date","SalesList","sale","done","Sales","sales","setSales","deletedSaleId","prevSales","class","AuthContext","createContext","isLoggedIn","login","logout","MainNavigation","auth","useContext","to","Landing","Login","password","loginAction","setItem","token","loginData","removeItem","Register","password2","registerAction","newUser","minLength","App","setIsLoggedIn","useCallback","Provider","path","exact","component","UpdateSale","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c56f4cdd.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport const NewProduct = props => {\n    const [formData, setFormData] = useState({\n        name: '',\n        price: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n\n    const { name, price } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const newProductData = {\n            name,\n            price\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/product',\n                {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(newProductData)\n                }\n            )\n            const responseData = await response.json();\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/products');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Add New Product</h1>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Name\" name=\"name\"\n                    value={name} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product price\" name=\"price\"\n                    value={price} \n                    onChange={e => onChange(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add\" />\n            </form>\n        </section>\n    )\n}\n\nexport default NewProduct;","import React from 'react';\n\nconst ProductItem = props => {\n    const handleEdit = () => {\n        props.history.push('/product/' + props.id)\n    }\n\n    const handleDelete = async () => {\n        try {\n            const response = await fetch(\n                process.env.REACT_APP_BACKEND_URL + '/api/product/' + props.id,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'x-auth-token': localStorage.getItem('token')\n                    }\n                }\n            );\n\n            const responseData = await response.json();\n            \n            if(!response.ok) {\n                throw new Error(responseData.msg)\n            }\n            \n            props.onDelete(props.id);\n        } catch (err) {\n            //setIsLoading(false);\n            //setError(err.message);\n        }\n    }\n\n    return(\n        <li>\n            <div className=\"post bg-white p my-1\">\n                <p>\n                    Name: {props.name}\n                    <br />\n                    Price: R${props.price.toFixed(2)}\n                </p>\n                <p>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleEdit}>\n                        Edit\n                    </button>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleDelete}>\n                        Delete\n                    </button>\n                </p>\n                \n            </div>\n        </li>\n    );\n};\n\nexport default ProductItem;\n","import React from 'react'\nimport ProductItem from './ProductItem'\n\nconst ProductsList = props => {\n    if(props.items.length === 0){\n        return <div className='center'>\n            <h2>No products found.</h2>\n        </div>\n    }\n    return (<ul \n        style={{position: 'relative'}}\n        className=\"products-list\">\n        {props.items.map(product => (\n            <ProductItem\n              key={product._id}\n              id={product._id}\n              name={product.name}\n              price={product.price}\n              onDelete={props.onDelete}\n              history={props.history} />\n        ))}\n    </ul>);\n}\n\nexport default ProductsList;","import React, {useState, useEffect} from 'react'\n\nimport ProductsList from './ProductsList'\n\nconst Products = props => {\n    const [products, setProducts] = useState();\n    const [error, setError] = useState();\n    const [isLoading, setIsLoading] = useState(false)\n\n    const newHandler = () => {\n        props.history.push('/product/new');\n    }\n\n    const onDeleteHandler = deletedProductId => {\n        setProducts(prevProducts => \n            prevProducts.filter(product => product._id !== deletedProductId)\n        );\n        console.log(products)\n    }\n\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/product',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setProducts(() => responseData);\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            \n        };\n        sendRequest();\n    }, [])\n    return <section className=\"container\">\n        <h1 className=\"large text-primary\">\n            Products\n        </h1>\n        <button\n            onClick={newHandler} \n            className='btn btn-green'>New Product</button>\n        {products && <ProductsList items={products} onDelete={onDeleteHandler}\n            history={props.history} />}\n    </section>\n}\n\nexport default Products;\n","import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport const UpdateProduct = props => {\n    const productId = useParams().productId;\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        price: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n    const { name, price } = formData;\n\n\n    useEffect(() => {\n        const fetchProduct = async () => {\n          try {\n            const response = await fetch(\n              `${process.env.REACT_APP_BACKEND_URL}/api/product/${productId}`,\n              {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                }\n              }\n            );\n            const responseData = await response.json()\n            //setLoadedPlace(responseData.place);\n            setFormData(\n              {\n                name: responseData.name,\n                price: responseData.price \n              }\n            );\n    \n          } catch (err) {\n              console.error(err)\n          }\n        };\n        fetchProduct();\n      }, [productId, setFormData]);\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const updateProductData = {\n            name,\n            price\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + \n                '/api/product/' +  productId,\n                {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(updateProductData)\n                }\n            )\n            const responseData = await response.json();\n            console.log(responseData);\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/products');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Update Product</h1>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Name\" name=\"name\"\n                    value={name} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Price\" name=\"price\"\n                    value={price} \n                    onChange={e => onChange(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Update\" />\n                <button type=\"submit\" className=\"btn btn-primary\"\n                onClick={() => props.history.push('/products')}>Cancel</button>\n            </form>\n            \n        </section>\n    )\n}\n\nexport default UpdateProduct;","import React from 'react';\n\nconst ProductItem = props => {\n\n    return(\n        <li>\n            <div className=\"post bg-white p my-1\">\n                <p>\n                    Product: {props.name}\n                </p>\n                <p>\n                Quantity: {props.quantity}\n                </p>\n                <p>\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={() => props.onDelete(props.id)}>\n                        Delete\n                    </button>\n                </p>\n                \n            </div>\n        </li>\n    );\n};\n\nexport default ProductItem;\n","import React from 'react'\nimport ProductItem from './ProductItem'\n\nconst ProductsList = props => {\n    \n    return (<ul \n        style={{position: 'relative'}}\n        className=\"products-list\">\n        {props.items.map(product => (\n            <ProductItem\n              key={product.product}\n              id={product.product}\n              name={product.name}\n              quantity={product.quantity}\n              onDelete={props.onDelete}\n              history={props.history} />\n        ))}\n    </ul>);\n}\n\nexport default ProductsList;","import React, {useState, useEffect} from 'react'\nimport ProductsList from './ProductsList'\n\n\nexport const NewSale = props => {\n    const [products, setProducts] = useState(); // products from database\n    const [selectedProducts, setSelectedProducts] = useState([]);\n    const [error, setError] = useState([]);\n    const [isLoading, setIsLoading] = useState(false)\n    const [formProduct, setFormProduct] = useState({\n        quantity: '',\n        product: ''\n    });\n    const [formSale, setFormSale] = useState({\n        client: '',\n        email: ''\n    });\n\n    const { quantity, product } = formProduct\n    const { client, email } = formSale\n\n    // Get products for user\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/product',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setProducts(() => responseData);\n                if ( responseData.length > 0){\n                    setFormProduct(old => {return {...old, product: responseData[0]._id}})\n                }\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            \n        };\n        sendRequest();\n    }, [])\n\n\n    const onChangeSale = e => setFormSale({...formSale, [e.target.name]: e.target.value})\n\n    const onChangeProduct = e => {\n        setFormProduct({...formProduct, [e.target.name]: e.target.value})\n    }\n\n    const onSubmitSale = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const newSaleData = {\n            client, email, products: selectedProducts\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/sale',\n                {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(newSaleData)\n                }\n            )\n            const responseData = await response.json();\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/sales');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n\n    const onSubmitProduct = e => {\n        e.preventDefault()\n        const selectedName = products.filter(\n            prod => prod._id === product\n        )[0].name\n        const newProductData = {...formProduct, name: selectedName}\n        setSelectedProducts(old => [...old, newProductData])\n        setFormProduct(old => {return {...old, quantity: 0}})\n    }\n\n    const onDeleteHandler = id => {\n        setSelectedProducts(old => old.filter(prod => id !== prod.product))\n    }\n\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Add New Sale</h1>\n            <ErrElements errors = {error} />\n\n            <form className=\"form\" onSubmit={e => onSubmitSale(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Client Name\" name=\"client\"\n                    value={client} \n                    onChange={e => onChangeSale(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Email\" name=\"email\"\n                    value={email} \n                    onChange={e => onChangeSale(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add Sale\" />\n            </form>\n\n            <form className=\"form\" onSubmit={e => {onSubmitProduct(e)}}>\n                <p>Choose a Product:</p>\n                    {products && <select\n                        name=\"product\"\n                        value={product} \n                        onChange={e => onChangeProduct(e)}>\n                    {products.map( product => {\n                        return (<option \n                            key={product._id} \n                            value={product._id}>\n                            {product.name}\n                        </option>)\n                    })}\n                </select>}\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Quantity\" name=\"quantity\"\n                    value={quantity}\n                    onChange={e => onChangeProduct(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add Product\" />\n            </form>\n            \n            {products && <ProductsList items={selectedProducts} onDelete={onDeleteHandler}\n            history={props.history} />}\n            \n        </section>\n    )\n}\n\nexport default NewSale;","import React from 'react';\n\nconst SaleItem = props => {\n    const handleEdit = () => {\n        props.history.push('/sale/' + props.id)\n    }\n\n    const handleDelete = async () => {\n        try {\n            const response = await fetch(\n                process.env.REACT_APP_BACKEND_URL + '/api/sale/' + props.id,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'x-auth-token': localStorage.getItem('token')\n                    }\n                }\n            );\n\n            const responseData = await response.json();\n            \n            if(!response.ok) {\n                throw new Error(responseData.msg)\n            }\n            \n            props.onDelete(props.id);\n            \n        } catch (err) {\n            //setIsLoading(false);\n            //setError(err.message);\n        }\n    }\n\n    return(\n        <li>\n            <div className=\"post bg-white p my-1\">\n                <p>\n                    Date: {props.date} <br/>\n                    Client: {props.client} <br/>\n                    Items: {props.quantity} <br/>\n                    Price: R${props.price.toFixed(2)}\n                    \n                </p>\n                <p>\n                    {/* <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleEdit}>\n                        Edit\n                    </button> */}\n                    <button      \n                        type=\"button\"\n                        className=\"btn btn-dark\"\n                        onClick={handleDelete}>\n                        Delete\n                    </button>\n                </p>\n                \n            </div>\n        </li>\n    );\n};\n\nexport default SaleItem;\n","import React from 'react'\nimport SaleItem from './SaleItem'\n\nconst SalesList = props => {\n    if(props.items.length === 0){\n        return <div className='center'>\n            <h2>No sales found.</h2>\n        </div>\n    }\n    return (<ul \n        style={{position: 'relative'}}\n        className=\"sales-list\">\n        {props.items.map(sale => (\n            <SaleItem\n              key={sale._id}\n              id={sale._id}\n              client={sale.client}\n              date={sale.date}\n              price={sale.price}\n              done={sale.done}\n              quantity={sale.products.length}\n              onDelete={props.onDelete}\n              history={props.history} />\n        ))}\n    </ul>);\n}\n\nexport default SalesList;","import React, {useState, useEffect} from 'react'\n\nimport SalesList from './SalesList'\n\nconst Sales = props => {\n    const [sales, setSales] = useState();\n    const [error, setError] = useState();\n    const [isLoading, setIsLoading] = useState(false)\n\n    const newHandler = () => {\n        props.history.push('/sale/new');\n    }\n\n    const onDeleteHandler = deletedSaleId => {\n        setSales(prevSales => \n            prevSales.filter(sale => sale._id !== deletedSaleId)\n        );\n        console.log(sales)\n    }\n\n    useEffect(() => {\n        const sendRequest = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(\n                    process.env.REACT_APP_BACKEND_URL + '/api/sale',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': localStorage.getItem('token')\n                        }\n                    }\n                );\n    \n                const responseData = await response.json();\n                \n                if(!response.ok) {\n                    throw new Error(responseData.msg)\n                }\n                \n                setSales(() => responseData);\n                setIsLoading(false);\n            } catch (err) {\n                setIsLoading(false);\n                setError(err.message);\n            }\n            \n        };\n        sendRequest();\n    }, [])\n    return <section className=\"container\">\n        <h1 className=\"large text-primary\">\n            Sales\n        </h1>\n        <button\n            onClick={newHandler} \n            className='btn btn-green'>New Sale</button>\n        {sales && <SalesList items={sales} onDelete={onDeleteHandler}\n            history={props.history} />}\n    </section>\n}\n\nexport default Sales;\n","import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport const UpdateProduct = props => {\n    const productId = useParams().productId;\n    \n    const [formData, setFormData] = useState({\n        name: '',\n        type: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n    const { name, type } = formData;\n\n\n    useEffect(() => {\n        const fetchProduct = async () => {\n          try {\n            const response = await fetch(\n              `${process.env.REACT_APP_BACKEND_URL}/api/product/${productId}`,\n              {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                }\n              }\n            );\n            const responseData = await response.json()\n            //setLoadedPlace(responseData.place);\n            setFormData(\n              {\n                name: responseData.name,\n                type: responseData.type \n              }\n            );\n    \n          } catch (err) {}\n        };\n        fetchProduct();\n      }, [productId, setFormData]);\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const updateProductData = {\n            name,\n            type\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + \n                '/api/product/' +  productId,\n                {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-auth-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify(updateProductData)\n                }\n            )\n            const responseData = await response.json();\n            console.log(responseData);\n            if(!response.ok){\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                props.history.push('/products');\n            }\n\n        } catch (err) {\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section class=\"container\">\n            <h1 className=\"large text-primary\">Add New Product</h1>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Name\" name=\"name\"\n                    value={name} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Product Type\" name=\"type\"\n                    value={type} \n                    onChange={e => onChange(e)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Update\" />\n            </form>\n        </section>\n    )\n}\n\nexport default UpdateProduct;","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    login: () => {},\n    logout: () => {}\n})","import React, { useContext } from 'react';\nimport {Link} from 'react-router-dom'\nimport { AuthContext } from '../../context/auth-context';\n\nconst MainNavigation = props => {\n    const auth = useContext(AuthContext);\n\n    return (\n        <nav className=\"navbar bg-dark\">\n        <h1>\n            <Link to=\"/\">\n                <i className=\"fas fa-code\"></i> Direct2U\n            </Link>\n        </h1>\n        <ul>\n            {!auth.isLoggedIn && \n                <li><Link to=\"/register\">Register</Link></li>\n            }\n            {!auth.isLoggedIn && \n                <li><Link to=\"/login\">Login</Link></li>\n            }\n            {auth.isLoggedIn && \n                <li><Link to=\"/products\">Products</Link></li>\n            }\n            {auth.isLoggedIn && \n                <li><Link to=\"/sales\">Sales</Link></li>\n            }\n            {auth.isLoggedIn &&\n                <li><button onClick={auth.logout}>LOGOUT</button></li>\n            }\n        </ul>\n        </nav>\n    );\n};\n\nexport default MainNavigation;","import React, {useContext} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport { AuthContext } from '../../context/auth-context';\n\nexport const Landing = () => {\n    const auth = useContext(AuthContext);\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                <h1 className=\"x-large\">Direct2U</h1>\n                <p className=\"lead\">\n                    A Direct Sales Management Plattaform\n                </p>\n                <div className=\"buttons\">\n                    {!auth.isLoggedIn &&\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>}\n                    {!auth.isLoggedIn &&\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>}\n                </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Landing;","import React, {useState, useContext} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport { AuthContext } from '../../shared/context/auth-context';\n\nexport const Login = () => {\n    const auth = useContext(AuthContext);\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n\n    const loginAction = (auth, responseData) => {\n        localStorage.setItem('token', responseData.token);\n        auth.login();\n    }\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        const loginData = {\n            email,\n            password\n        }\n        try {\n            setIsLoading(true)\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/auth',\n                {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(loginData)\n                }\n            )\n            const responseData = await response.json();\n            console.log(responseData);\n            if(!response.ok){\n                localStorage.removeItem('token');\n                var errors = []\n                responseData.errors.forEach(element => {\n                    errors.push(element.msg) \n                });\n                setError(oldError => oldError.concat(errors))\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n                loginAction(auth, responseData)\n            }\n\n        } catch (err) {\n            localStorage.removeItem('token');\n            console.error(err);\n            setIsLoading(false);\n            setError(oldError => [...oldError, err.message \n                || 'Something went wrong, please try again'])\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\"\n                    value={email} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    \n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </section>\n    )\n}\n\nexport default Login;\n","import React, {useState, useContext} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport { AuthContext } from '../../shared/context/auth-context';\n\nexport const Register = () => {\n    const auth = useContext(AuthContext);\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState([]);\n\n    const registerAction = ((auth, responseData) => {\n        localStorage.setItem('token', responseData.token);\n        auth.login();\n    })\n\n    const { name, email, password, password2} = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        setError(oldError => []);\n        if(password !== password2) {\n            console.log('Passwords do not match');\n        } else {\n            const newUser = {\n                name,\n                email,\n                password\n            }\n            try {\n                setIsLoading(true);\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL + '/api/user',\n                    {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(newUser)\n                    }\n                )\n                const responseData = await response.json();\n                // console.log(responseData);\n                if(!response.ok) {\n                    localStorage.removeItem('token');\n                    var errors = []\n                    responseData.errors.forEach(element => {\n                        errors.push(element.msg) \n                    });\n                    setError(oldError => oldError.concat(errors))\n                    setIsLoading(false);\n                } else {\n                    setIsLoading(false);\n                    registerAction(auth, responseData)\n                }\n                \n            } catch (err) {\n                localStorage.removeItem('token');\n                console.error(err);\n                setIsLoading(false);\n                setError(oldError => [...oldError, err.message \n                    || 'Something went wrong, please try again'])\n            }\n        }\n    }\n    const ErrElements = props => {\n        //console.log(props.errors)\n        return (props.errors.map((err, index) => \n                <p key={index} style={{color: 'red'}}>{err}</p>)\n        );\n    }\n    return (\n        <section className=\"container\">\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <ErrElements errors = {error} />\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" \n                    value={name} \n                    onChange={e => onChange(e)}\n                 />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\"\n                    value={email} \n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    \n                />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    minLength=\"6\"\n                    value={password2} \n                    onChange={e => onChange(e)}\n                    \n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </section>\n    )\n}\n\nexport default Register;","import React, { useState, useCallback } from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\n\nimport NewProduct from './components/product/NewProduct'\nimport Products from './components/product/Products'\nimport UpdateProduct from './components/product/UpdateProduct'\n\nimport NewSale from './components/sale/NewSale'\nimport Sales from './components/sale/Sales'\nimport UpdateSale from './components/sale/UpdateSale'\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport Landing from './shared/components/Landing/Landing'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport { AuthContext } from './shared/context/auth-context'\nimport './App.css';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const login = useCallback(() => {\n        setIsLoggedIn(true);\n    }, [])\n\n    const logout = useCallback(() => {\n        setIsLoggedIn(false);\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{isLoggedIn, login, logout}}>\n            <Router>\n            <MainNavigation />\n            {isLoggedIn ? <Switch>\n                    <Route path='/product/new' exact component={NewProduct} />\n                    <Route path='/products' exact component={Products} />\n                    <Route path='/product/:productId' exact component={UpdateProduct} />\n                    <Route path='/sale/new' exact component={NewSale} />\n                    <Route path='/sales' exact component={Sales} />\n                    <Route path='/sale/:saleId' exact component={UpdateSale} />\n                    <Route path='/' exact component={Landing} />\n                    <Redirect to='/' />\n                </Switch>\n                :\n                <Switch>\n                    <Route exact path='/register' component={Register} />\n                    <Route exact path='/login' component={Login} />\n                    <Route path='/' exact component={Landing} />\n                    <Redirect to='/' />\n                </Switch>}\n            </Router>\n        </AuthContext.Provider>\n    );\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}